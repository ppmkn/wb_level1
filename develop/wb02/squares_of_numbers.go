package main

import (
	"fmt"
	"sync"
)

func main() {
	// Массив с числами, квадраты которых надо вычислить
	numbers := []int{2, 4, 6, 8, 10}

	// Канал для передачи результатов вычислений
	results := make(chan int)

	// WaitGroup для синхронизации горутин
	var wg sync.WaitGroup //используем, чтобы подождать, пока все горутины завершат свою работу

	/*
		Для каждого числа в массиве запускаем отдельную горутину,
		для вычисления квадрата числа и отправки результата в канал
	*/
	for _, num := range numbers {
		wg.Add(1) // Увеличиваем счетчик WaitGroup для каждой горутины
		go func(num int) {
			defer wg.Done()     // Уменьшаем счетчик при завершении горутины
			square := num * num // Вычисляем квадрат числа
			results <- square   // Отправляем результат в канал
		}(num) // Вызов функции сверху для каждого элемента массива numbers
	}

	// Запускаем дополнительную горутину для ожидания завершения всех горутин
	go func() {
		wg.Wait()      // Ждем, пока счетчик WaitGroup станет равным нулю
		close(results) // Закрываем канал, когда все горутины завершены
	}()

	// Проходимся по результатам из канала и выводим их
	for square := range results {
		fmt.Println(square)
	}
}
